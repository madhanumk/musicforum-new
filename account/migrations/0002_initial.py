# Generated by Django 3.2.2 on 2023-04-04 14:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('event', '0001_initial'),
    
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='post',
            name='interest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='event.interest'),
        ),
        migrations.AddField(
            model_name='post',
            name='invitation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='event.invitation'),
        ),
        migrations.AddField(
            model_name='post',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.location'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='user_likes',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='musician_skill',
            name='musician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='musician_skill', to='account.musician'),
        ),
        migrations.AddField(
            model_name='musician_skill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.skill'),
        ),
        migrations.AddField(
            model_name='musician_skill',
            name='skill_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.skill_level'),
        ),
        migrations.AddField(
            model_name='musician_highlight',
            name='highlight_category',
            field=models.ManyToManyField(to='account.Highlight_Category'),
        ),
        migrations.AddField(
            model_name='musician_highlight',
            name='musician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.musician'),
        ),
        migrations.AddField(
            model_name='musician_gurukulam',
            name='gurukulam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.gurukulam'),
        ),
        migrations.AddField(
            model_name='musician_gurukulam',
            name='musician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gurukulas', to='account.musician'),
        ),
        migrations.AddField(
            model_name='musician_gurukulam',
            name='sender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='musician_award',
            name='musician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='musician_award', to='account.musician'),
        ),
        migrations.AddField(
            model_name='musician',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='musician', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lecture_video',
            name='gurukulam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.gurukulam'),
        ),
        migrations.AddField(
            model_name='key_performer',
            name='musician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.musician'),
        ),
        migrations.AddField(
            model_name='key_performer',
            name='troupe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.troupe'),
        ),
        migrations.AddField(
            model_name='highlight',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highlight', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gurukulam_testimonial',
            name='gurukulam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.gurukulam'),
        ),
        migrations.AddField(
            model_name='gurukulam_testimonial',
            name='musician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.musician'),
        ),
        migrations.AddField(
            model_name='gurukulam_teacher',
            name='gurukulam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.gurukulam'),
        ),
        migrations.AddField(
            model_name='gurukulam_teacher',
            name='musician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.musician'),
        ),
        migrations.AddField(
            model_name='gurukulam_teacher',
            name='sender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gurukulam_skill',
            name='gurukulam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gurukulam_skill', to='account.gurukulam'),
        ),
        migrations.AddField(
            model_name='gurukulam_skill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.skill'),
        ),
        migrations.AddField(
            model_name='gurukulam_award',
            name='gurukulam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gurukulam_award', to='account.gurukulam'),
        ),
        migrations.AddField(
            model_name='gurukulam',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event_performer',
            name='event_organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.event_organizer'),
        ),
        migrations.AddField(
            model_name='event_performer',
            name='musician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.musician'),
        ),
        migrations.AddField(
            model_name='event_performer',
            name='troupe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.troupe'),
        ),
        migrations.AddField(
            model_name='event_organizer_highlight',
            name='event_organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.event_organizer'),
        ),
        migrations.AddField(
            model_name='event_organizer_highlight',
            name='highlight_category',
            field=models.ManyToManyField(to='account.Highlight_Category'),
        ),
        migrations.AddField(
            model_name='event_organizer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='gurukulam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.gurukulam'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conversation',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chat',
            name='conversation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.conversation'),
        ),
        migrations.AddField(
            model_name='chat',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blocked_user',
            name='blocked_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blocked_user',
            name='blocked_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(to='auth.Group'),
        ),
        migrations.AddField(
            model_name='user',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.location'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]